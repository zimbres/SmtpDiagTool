<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>